(function(){var t=function(e,i,r,s){if(!(this instanceof t))return new t(e,i,r,s);if("string"!=typeof e)throw new TypeError("A name is required for all fields");if("string"!=typeof i)throw new TypeError("A type is required for all fields");if("object"!=typeof r&&(r={}),r.rules===void 0)r.rules=[];else if(!(r.rules instanceof Array))throw new TypeError("the rules must be defined as an array");if(r.attributes=r.attributes||{},r.attributes.name=e,r.attributes.id=r.id||"",-1===["textarea","select"].indexOf(i)&&(r.attributes.type=i,r.attributes.value=r.value||""),this.name=e,this.type=i,this.value=r.value||"",this.label=r.label,this.attributes=r.attributes,this.rules=r.rules,this.fieldJSON=r,this.errors={},-1!==["select","radio","checkbox"].indexOf(this.type)&&(this.options=r.options),this.opts={},t.defaultOpts!==void 0)for(var o in t.defaultOpts)this.opts[o]=t.defaultOpts[o];if(s!==void 0)for(var o in s)this.opts[o]=s[o];t.trigger(this,"init")};t.prototype.setError=function(e,i){this.errors[e]=i,t.trigger(this,"setError")},t.prototype.clearError=function(e){return this.errors[e]!==void 0?delete this.errors[e]:(e===void 0&&(this.errors={}),t.trigger(this,"clearError"),void 0)},t.prototype.serialize=function(t){var e={name:this.name,type:this.type,value:this.value,label:this.label,rules:this.rules,errors:this.errors};return-1!==["select","radio","checkbox"].indexOf(this.type)&&(e.options=this.options),t=t!==void 0?t:!1,t?JSON.stringify(e):e},t.on=function(e,i){t._hooks===void 0&&(t._hooks={}),t._hooks[e]===void 0&&(t._hooks[e]=[]),t._hooks[e].push(i)},t.trigger=function(e,i){if(void 0!==t._hooks&&"undefined"!==t._hooks[i])for(var r=0,s=t._hooks[i].length;s>r;r++)t._hooks[i][r].apply(e,Array.prototype.slice.call(arguments,2))},"undefined"!=typeof exports?exports.Field=t:(window.UniversalForms=window.UniversalForms||{},window.UniversalForms.Field=t)})(),function(){var t=function(e,i){if(!(this instanceof t))return new t(e,i);if(e===void 0&&(e={}),e.attributes=e.attributes||{},e.attributes.id=e.id,e.attributes.method=e.method||"POST",e.attributes.action=e.action,this.attributes=e.attributes,this.fields={},this.formJSON=e,e.fields===void 0)e.fields=[];else if(!(e.fields instanceof Array))throw new TypeError("Fields must be defined as an array");for(var r=e.fields.length,s=0;r>s;s++)this.addField(e.fields[s].name,e.fields[s].type,e.fields[s]);if(this.opts={},t.defaultOpts!==void 0)for(var o in t.defaultOpts)this.opts[o]=t.defaultOpts[o];if(i!==void 0)for(var o in i)this.opts[o]=i[o];t.trigger(this,"init")};t.prototype.addField=function(t,e,i,r){return t instanceof UniversalForms.Field?this.fields[t.name]=t:this.fields[t]=new UniversalForms.Field(t,e,i,r)},t.prototype.removeField=function(e){this.fields[e]!==void 0&&delete this.fields[e],t.trigger(this,"removeField")},t.prototype.eachField=function(t,e){for(var i in this.fields)if(t.call(e||this,this.fields[i],i,this.fields)===!1)break},t.on=function(e,i){t._hooks===void 0&&(t._hooks={}),t._hooks[e]===void 0&&(t._hooks[e]=[]),t._hooks[e].push(i)},t.trigger=function(e,i){if(void 0!==t._hooks&&"undefined"!==t._hooks[i])for(var r=0,s=t._hooks[i].length;s>r;r++)t._hooks[i][r].apply(e,Array.prototype.slice.call(arguments,2))},"undefined"!=typeof exports?exports.Form=t:(window.UniversalForms=window.UniversalForms||{},window.UniversalForms.Form=t)}();